{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const startBtn = document.querySelector('button[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet intervalId = null;\nlet userSelectedDate = null;\nstartBtn.disabled = true;\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error!!!',\n        message: 'Please, choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst timer = {\n  start() {\n    this.stop();\n    intervalId = setInterval(() => {\n      const leftTime = userSelectedDate - Date.now();\n\n      if (leftTime <= 1000) {\n        this.stop();\n\n        input.disabled = false;\n      }\n\n      const objTime = convertMs(leftTime);\n      daysEl.textContent = addLeadingZero(objTime.days);\n      hoursEl.textContent = addLeadingZero(objTime.hours);\n      minutesEl.textContent = addLeadingZero(objTime.minutes);\n      secondsEl.textContent = addLeadingZero(objTime.seconds);\n    }, 1000);\n  },\n  stop() {\n    clearInterval(intervalId);\n    intervalId = null;\n  },\n};\n\nstartBtn.addEventListener('click', () => {\n  timer.start();\n  startBtn.disabled = true;\n  input.disabled = true;\n});\n"],"names":["startBtn","input","daysEl","hoursEl","minutesEl","secondsEl","intervalId","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","options","selectedDates","iziToast","flatpickr","timer","leftTime","objTime"],"mappings":"+IAAA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAOzD,IAAIC,EAAa,KACbC,EAAmB,KACvBP,EAAS,SAAW,GAEpB,SAASQ,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrBV,EAAmBU,EAAc,CAAC,EAE9BV,EAAmB,IAAI,MACzBW,EAAS,MAAM,CACb,MAAO,WACP,QAAS,qCACjB,CAAO,EACDlB,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAmB,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAQ,CACZ,OAAQ,CACN,KAAK,KAAI,EACTd,EAAa,YAAY,IAAM,CAC7B,MAAMe,EAAWd,EAAmB,KAAK,IAAG,EAExCc,GAAY,MACd,KAAK,KAAI,EAETpB,EAAM,SAAW,IAGnB,MAAMqB,EAAUd,EAAUa,CAAQ,EAClCnB,EAAO,YAAcY,EAAeQ,EAAQ,IAAI,EAChDnB,EAAQ,YAAcW,EAAeQ,EAAQ,KAAK,EAClDlB,EAAU,YAAcU,EAAeQ,EAAQ,OAAO,EACtDjB,EAAU,YAAcS,EAAeQ,EAAQ,OAAO,CACvD,EAAE,GAAI,CACR,EACD,MAAO,CACL,cAAchB,CAAU,EACxBA,EAAa,IACd,CACH,EAEAN,EAAS,iBAAiB,QAAS,IAAM,CACvCoB,EAAM,MAAK,EACXpB,EAAS,SAAW,GACpBC,EAAM,SAAW,EACnB,CAAC"}